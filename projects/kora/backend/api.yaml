openapi: 3.1.0
info:
  title: Kora API
  description: The backend APIs that powers the Kora Frontend
  version: 1.0.0
servers:
  - url: 'http://localhost:8000'
tags:
  - name: schedule
    description: Schedule-related operations
    x-displayName: "Schedule"
  - name: booking
    description: Booking-related operations
    x-displayName: "Booking"
components:
  schemas:
    Schedule:
      type: object
      properties:
        days:
          type: array
          items:
            type: number
            summary: 0 for Sunday, ... 7 for Saturday
            description: |
              0 - Sunday
              1 - Monday
              2 - Tuesday
              3 - Wednesday
              4 - Thursday
              5 - Friday
              6 - Saturday
        hours:
          type: array
          items:
            type: number
            summary: 0 for 12 am, 23 for 11 pm
        duration:
          type: number
          summary: Amount of minutes per booking slot
        timezone:
          type: string
          summary: The timezone of the schedule
    ScheduleWithId:
      allOf:
        - $ref: '#/components/schemas/Schedule'
        - type: object
          properties:
            id:
              type: string
              summary: The UUID of the Schedule
          required:
            - id
    Booker:
      type: object
      properties:
        name:
          type: string
          summary: The name of the Booker
        email:
          type: string
          summary: The email of the Booker
    Booking:
      type: object
      properties:
        scheduleId:
          type: string
          summary: The UUID of the Schedule that this was booked on
        dateTime:
          type: string
          summary: The ISO 8601 date time formatted date and time for the booking.
        booker:
          type: object
          $ref: '#/components/schemas/Booker'
        memo:
          type: string
          summary: The memo entered in by the Booker
    BookingWithId:
      allOf:
        - $ref: '#/components/schemas/Booking'
        - type: object
          properties:
            id:
              type: string
              summary: The UUID of the Booking
  parameters:
    ScheduleId:
      name: scheduleId
      in: path
      required: true
      description: UUID of the Schedule
      schema:
        type: string
    BookingId:
      name: bookingId
      in: path
      required: true
      description: UUID of the Appointment
      schema:
        type: string
    GuestAccessToken:
      name: t
      in: query
      description: Guest Access Token
      required: true
      schema:
        type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /v1/auth/login:
    post:
      summary: Setup the user accounts
      responses:
        '200':
          description: Successfully registered the user
      security:
        - BearerAuth: []
    get:
      summary: Get the login URL
      responses:
        '200':
          description: Give back the login url

  /v1/schedules:
    put:
      tags:
        - schedule
      summary: Create a schedule for the user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: Successfully created a schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleWithId'
        '406':
          description: Schedule already exists
    get:
      tags:
        - schedule
      summary: Get all schedules for the user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: This is all of the users defined schedules
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedules:
                    type: array
                    items:
                       $ref: '#/components/schemas/ScheduleWithId'
  /v1/schedule/{scheduleId}:
    post:
      tags:
        - schedule
      summary: Update the schedule by uuid
      parameters:
        - $ref: '#/components/parameters/ScheduleId'
      security:
        - BearerAuth: []
      requestBody:
        description: The newly updated schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleWithId'

  /v1/bookings:
    put:
      tags:
        - booking
      summary: Generate a booking link
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: The URL that the user can give to people to booking
    get:
      tags:
        - booking
      summary: Get all bookings for the User
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: d
          schema:
            type: string
          description: Filter bookings for a day
          required: false
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookingWithId'

  /v1/booking/{bookingId}:
    get:
      tags:
        - booking
      summary: Get the Booking with UUID for the user
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/BookingId'
  /v1/guest/{bookingId}:
    get:
      tags:
        - guest
      summary: Get the Booking with UUID for Guests
      parameters:
        - $ref: '#/components/parameters/GuestAccessToken'
      responses:
        200:
          description: Get back the details needed to make a booking
          content:
            application/json:
              schema:
                type: object
                properties:

    post:
      tags:
        - booking
      summary: Confirm the booking for a booker
      parameters:
        - $ref: '#/components/parameters/BookingId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'